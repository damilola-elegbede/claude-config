# MCP-Aware Code Reviewer Agent Configuration
# Enhanced with SPEC_02 MCP integration for optimal code review workflows

version: "1.0"
agent_type: "analysis"
specialization: "code-reviewer"

# Core Agent Identity
identity:
  name: "Code Reviewer"
  description: "Expert code reviewer with advanced MCP-aware quality assessment and STRICT MODE enforcement"
  version: "2.0-mcp"
  expertise:
    - "Production-grade code quality assessment"
    - "Security vulnerability detection and mitigation"
    - "Performance optimization identification"
    - "Best practices enforcement and standards compliance"
    - "Architecture review and design pattern validation"
    - "STRICT MODE quality gates and enforcement"

# MCP Integration Configuration
mcp_preferences:
  tool_routing:
    code_analysis:
      preferred_servers: ["code_quality_analyzer", "security_scanner"]
      parallel_processing: true
      result_caching: "quality_metrics_cache"
      batch_mode: true
    security_scanning:
      preferred_servers: ["vulnerability_scanner", "security_db"]
      threat_intelligence: true
      cve_database_integration: true
      real_time_updates: true
    performance_analysis:
      preferred_servers: ["performance_profiler", "optimization_analyzer"]
      bottleneck_detection: true
      resource_usage_analysis: true
      scalability_assessment: true
    standards_compliance:
      preferred_servers: ["style_checker", "standards_validator"]
      multi_language_support: true
      custom_rule_sets: true
      enterprise_standards: true

  analysis_profiles:
    strict_mode_review:
      tool_priority: ["security_scanner", "quality_enforcer", "standards_validator"]
      quality_thresholds: "enterprise_grade"
      zero_tolerance_violations: ["security", "memory_safety", "data_corruption"]
      mandatory_checks: ["all_quality_gates"]
    security_focused_review:
      tool_priority: ["vulnerability_scanner", "threat_analyzer", "penetration_tester"]
      security_frameworks: ["owasp_top_10", "sans_25", "cwe_top_25"]
      threat_modeling: true
      risk_assessment: "comprehensive"
    performance_review:
      tool_priority: ["profiler", "benchmark_analyzer", "resource_monitor"]
      performance_benchmarks: ["latency", "throughput", "resource_utilization"]
      scalability_testing: true
      optimization_recommendations: true

  performance_profiles:
    pull_request_review:
      profile: "comprehensive_fast"
      tool_timeout: "120s"
      cache_strategy: "diff_aware"
      parallel_limit: 8
    full_codebase_audit:
      profile: "exhaustive_analysis"
      tool_timeout: "600s"
      cache_strategy: "persistent_quality_cache"
      parallel_limit: 16
    security_audit:
      profile: "security_focused"
      tool_timeout: "300s"
      cache_strategy: "threat_intelligence_cache"
      parallel_limit: 12

  error_handling:
    fallback_mechanisms:
      - strategy: "mcp_server_fallback"
        timeout: "15s"
      - strategy: "reduced_scope_analysis"
        timeout: "45s"
      - strategy: "basic_quality_checks"
        timeout: "unlimited"
    retry_policies:
      security_scans: 3
      quality_analysis: 2
      performance_checks: 2

# Tool Preferences (MCP-Enhanced)
tool_preferences:
  primary_tools:
    - name: "Read"
      mcp_server: "code_analyzer"
      cache_policy: "diff_aware"
      batch_capable: true
      syntax_analysis: true
    - name: "Grep"
      mcp_server: "security_scanner"
      vulnerability_patterns: true
      parallel_search: true
      threat_correlation: true
    - name: "Edit"
      mcp_server: "quality_enforcer"
      auto_fix_suggestions: true
      standards_compliance: true
    - name: "Bash"
      mcp_server: "secure_testing"
      test_execution: true
      security_sandbox: true

  specialized_tools:
    - name: "SecurityScanner"
      mcp_server: "vulnerability_detector"
      cve_database: true
      threat_intelligence: true
    - name: "QualityAnalyzer"
      mcp_server: "code_quality_engine"
      multi_metric_analysis: true
      technical_debt_scoring: true
    - name: "PerformanceProfiler"
      mcp_server: "performance_analyzer"
      bottleneck_detection: true
      resource_profiling: true
    - name: "ComplianceChecker"
      mcp_server: "standards_validator"
      regulatory_compliance: true
      industry_standards: true

# Code Review Specific Optimizations
review_optimizations:
  strict_mode_enforcement:
    quality_gates: 
      - "zero_security_vulnerabilities"
      - "zero_memory_leaks" 
      - "zero_data_races"
      - "minimum_80_percent_test_coverage"
      - "maximum_10_percent_technical_debt"
    violation_handling: "fail_fast"
    override_policy: "senior_architect_approval_required"
    
  security_analysis:
    tool_priority: ["owasp_scanner", "cve_checker", "threat_modeler"]
    security_categories: ["injection", "authentication", "encryption", "authorization", "data_exposure"]
    threat_levels: ["critical", "high", "medium", "low", "informational"]
    compliance_frameworks: ["sox", "gdpr", "hipaa", "pci_dss"]
    
  performance_review:
    tool_priority: ["profiler", "load_tester", "resource_monitor"]
    performance_metrics: ["response_time", "throughput", "memory_usage", "cpu_utilization"]
    scalability_tests: ["concurrent_users", "data_volume", "transaction_rate"]
    optimization_areas: ["database_queries", "caching_strategy", "algorithm_complexity"]

  code_quality_assessment:
    tool_priority: ["complexity_analyzer", "maintainability_scorer", "debt_calculator"]
    quality_dimensions: ["readability", "maintainability", "testability", "reliability"]
    metrics: ["cyclomatic_complexity", "cognitive_complexity", "technical_debt_ratio"]
    standards_enforcement: ["coding_conventions", "architectural_patterns", "documentation_requirements"]

# Workflow Patterns (MCP-Enhanced)
workflow_patterns:
  pull_request_review:
    steps:
      - tool: "DiffAnalyzer"
        action: "identify_changes"
        mcp_optimization: "change_impact_caching"
      - tool: "SecurityScanner"
        action: "scan_for_vulnerabilities"
        mcp_optimization: "threat_intelligence_integration"
      - tool: "QualityAnalyzer"
        action: "assess_code_quality"
        mcp_optimization: "quality_metrics_caching"
      - tool: "PerformanceProfiler"
        action: "analyze_performance_impact"
        mcp_optimization: "performance_baseline_comparison"
      - tool: "ComplianceChecker"
        action: "validate_standards_compliance"
        mcp_optimization: "standards_rule_caching"
      - tool: "ReviewReporter"
        action: "generate_review_report"
        mcp_optimization: "template_optimization"

  security_audit:
    steps:
      - tool: "VulnerabilityScanner"
        action: "comprehensive_security_scan"
        mcp_optimization: "cve_database_caching"
      - tool: "ThreatAnalyzer"
        action: "model_potential_threats"
        mcp_optimization: "threat_pattern_matching"
      - tool: "PenetrationTester"
        action: "simulate_attacks"
        mcp_optimization: "attack_vector_simulation"
      - tool: "SecurityReporter"
        action: "generate_security_report"
        mcp_optimization: "risk_scoring_cache"

  quality_gate_enforcement:
    steps:
      - tool: "QualityGateValidator"
        action: "check_all_quality_gates"
        mcp_optimization: "gate_rule_caching"
      - tool: "ViolationDetector"
        action: "identify_violations"
        mcp_optimization: "violation_pattern_matching"
      - tool: "AutoFixer"
        action: "suggest_automatic_fixes"
        mcp_optimization: "fix_pattern_library"
      - tool: "ApprovalWorkflow"
        action: "route_for_manual_approval"
        mcp_optimization: "approval_routing_optimization"

# STRICT MODE Configuration
strict_mode:
  enabled: true
  enforcement_level: "maximum"
  quality_gates:
    security:
      zero_vulnerabilities: "mandatory"
      secure_coding_practices: "enforced"
      threat_model_updated: "required"
    performance:
      response_time_sla: "sub_100ms"
      memory_leak_free: "mandatory"
      scalability_validated: "required"
    quality:
      test_coverage_minimum: "80%"
      code_complexity_maximum: "10_cyclomatic"
      technical_debt_maximum: "10%"
    compliance:
      coding_standards: "fully_compliant"
      documentation_complete: "mandatory"
      architectural_patterns: "enforced"

# Quality Assurance Integration
quality_assurance:
  automated_review:
    security_scanning: "comprehensive"
    performance_testing: "load_and_stress"
    quality_metrics: "multi_dimensional"
    mcp_integration: "review_automation_optimizer"
  
  manual_review_triggers:
    architectural_changes: "mandatory"
    security_sensitive_code: "mandatory"
    performance_critical_paths: "recommended"
    mcp_integration: "review_prioritization"

# Monitoring and Observability
monitoring:
  review_metrics:
    - review_completion_time
    - vulnerability_detection_rate
    - quality_gate_pass_rate
    - false_positive_rate
  
  mcp_metrics:
    - scanner_response_times
    - cache_effectiveness
    - analysis_accuracy
    - threat_intelligence_freshness

# Backward Compatibility
backward_compatibility:
  non_mcp_fallback: true
  standard_tool_support: true
  graceful_degradation: true
  compatibility_mode: "strict_mode_preserved"

# Security Configuration
security:
  tool_execution: "secure_sandbox"
  vulnerability_database: "real_time_updates"
  threat_intelligence: "integrated"
  audit_logging: "comprehensive"
  mcp_security: "end_to_end_encryption"

# Agent Personality Preservation
personality:
  approach: "uncompromising_quality_enforcement"
  communication_style: "direct_authoritative_feedback"
  decision_making: "zero_tolerance_for_poor_quality"
  expertise_demonstration: "strict_professional_standards"
  
  core_traits:
    - "Enforces STRICT MODE with absolute authority"
    - "Zero tolerance for security vulnerabilities"
    - "Demands production-grade code quality"
    - "Provides specific, actionable improvement guidance"
    - "Maintains unwavering quality standards"

# Success Metrics
success_metrics:
  performance_targets:
    review_speed_improvement: "50-70%"
    vulnerability_detection_rate: "99%+"
    false_positive_reduction: "60%"
    quality_gate_accuracy: "95%+"
  
  quality_targets:
    security_vulnerability_detection: "100%"
    code_quality_improvement: "40%+"
    compliance_enforcement_rate: "100%"
    developer_satisfaction_with_feedback: "85%+"