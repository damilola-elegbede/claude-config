# MCP-Aware Debugger Agent Configuration
# Enhanced with SPEC_02 MCP integration for optimal debugging and root cause analysis workflows

version: "1.0"
agent_type: "analysis"
specialization: "debugger"

# Core Agent Identity
identity:
  name: "Debugger"
  description: "Expert debugging agent with advanced MCP-aware error tracking and systematic root cause analysis"
  version: "2.0-mcp"
  expertise:
    - "Complex bug investigation and root cause analysis"
    - "Race condition and concurrency issue detection"
    - "Memory leak identification and performance debugging"
    - "Intermittent failure pattern analysis"
    - "Production system debugging and troubleshooting"
    - "Multi-system integration issue diagnosis"

# MCP Integration Configuration
mcp_preferences:
  tool_routing:
    error_analysis:
      preferred_servers: ["error_analyzer", "exception_tracker"]
      parallel_processing: true
      result_caching: "error_pattern_cache"
      correlation_analysis: true
    log_processing:
      preferred_servers: ["log_analyzer", "pattern_matcher"]
      streaming_analysis: true
      real_time_monitoring: true
      multi_source_aggregation: true
    debugging_tools:
      preferred_servers: ["debugger_engine", "profiler"]
      interactive_debugging: true
      state_inspection: true
      execution_tracing: true
    system_monitoring:
      preferred_servers: ["system_monitor", "performance_tracker"]
      resource_monitoring: true
      health_checking: true
      anomaly_detection: true

  analysis_profiles:
    production_debugging:
      tool_priority: ["system_monitor", "log_analyzer", "error_correlator"]
      safety_mode: "non_intrusive"
      data_collection: "comprehensive_but_safe"
      impact_minimization: true
    development_debugging:
      tool_priority: ["interactive_debugger", "profiler", "trace_analyzer"]
      intrusive_debugging: "allowed"
      detailed_inspection: "full_access"
      performance_impact: "acceptable"
    intermittent_issue_analysis:
      tool_priority: ["pattern_detector", "statistical_analyzer", "correlation_engine"]
      long_term_monitoring: true
      pattern_learning: true
      probabilistic_analysis: true

  performance_profiles:
    critical_production_issue:
      profile: "emergency_response"
      tool_timeout: "30s"
      cache_strategy: "hot_cache_only"
      parallel_limit: 16
    complex_investigation:
      profile: "thorough_analysis"
      tool_timeout: "300s"
      cache_strategy: "comprehensive_caching"
      parallel_limit: 12
    routine_debugging:
      profile: "efficient_debugging"
      tool_timeout: "120s"
      cache_strategy: "adaptive_caching"
      parallel_limit: 8

  error_handling:
    fallback_mechanisms:
      - strategy: "mcp_server_fallback"
        timeout: "5s"
      - strategy: "reduced_debugging_scope"
        timeout: "15s"
      - strategy: "basic_error_analysis"
        timeout: "unlimited"
    retry_policies:
      system_queries: 3
      log_analysis: 2
      debugging_operations: 1

# Tool Preferences (MCP-Enhanced)
tool_preferences:
  primary_tools:
    - name: "Read"
      mcp_server: "log_analyzer"
      cache_policy: "error_context_aware"
      batch_capable: true
      pattern_extraction: true
    - name: "Grep"
      mcp_server: "error_pattern_matcher"
      regex_optimization: true
      parallel_search: true
      correlation_analysis: true
    - name: "Bash"
      mcp_server: "system_debugger"
      debugging_commands: true
      system_introspection: true
      safe_execution: true
    - name: "LS"
      mcp_server: "system_inspector"
      file_metadata_analysis: true
      permission_checking: true

  specialized_tools:
    - name: "ErrorTracker"
      mcp_server: "error_correlation_engine"
      multi_source_correlation: true
      pattern_learning: true
    - name: "LogAnalyzer"
      mcp_server: "log_processing_engine"
      real_time_analysis: true
      anomaly_detection: true
    - name: "SystemProfiler"
      mcp_server: "system_profiler"
      resource_monitoring: true
      performance_analysis: true
    - name: "TraceAnalyzer"
      mcp_server: "execution_tracer"
      call_stack_analysis: true
      execution_flow_tracking: true

# Debugging-Specific Optimizations
debugging_optimizations:
  root_cause_analysis:
    tool_priority: ["error_correlator", "system_analyzer", "pattern_detector"]
    analysis_methodology: ["reproduce", "isolate", "eliminate", "verify"]
    evidence_collection: ["logs", "metrics", "traces", "system_state"]
    hypothesis_testing: "systematic_elimination"
    
  concurrency_debugging:
    tool_priority: ["thread_analyzer", "race_detector", "deadlock_analyzer"]
    concurrency_issues: ["race_conditions", "deadlocks", "livelocks", "resource_contention"]
    synchronization_analysis: ["mutex_usage", "atomic_operations", "memory_ordering"]
    timing_analysis: "high_precision_timing"
    
  memory_debugging:
    tool_priority: ["memory_profiler", "leak_detector", "heap_analyzer"]
    memory_issues: ["memory_leaks", "buffer_overflows", "use_after_free", "double_free"]
    allocation_tracking: "comprehensive_tracking"
    garbage_collection_analysis: "gc_impact_assessment"

  performance_debugging:
    tool_priority: ["performance_profiler", "bottleneck_detector", "resource_monitor"]
    performance_metrics: ["cpu_utilization", "memory_usage", "io_operations", "network_latency"]
    bottleneck_categories: ["cpu_bound", "io_bound", "memory_bound", "network_bound"]
    optimization_opportunities: "systematic_identification"

# Workflow Patterns (MCP-Enhanced)
workflow_patterns:
  systematic_debugging:
    steps:
      - tool: "IssueClassifier"
        action: "categorize_problem"
        mcp_optimization: "classification_caching"
      - tool: "EvidenceCollector"
        action: "gather_debug_information"
        mcp_optimization: "multi_source_aggregation"
      - tool: "PatternAnalyzer"
        action: "identify_error_patterns"
        mcp_optimization: "pattern_recognition_cache"
      - tool: "HypothesisGenerator"
        action: "formulate_root_cause_hypotheses"
        mcp_optimization: "hypothesis_ranking"
      - tool: "TestExecutor"
        action: "test_hypotheses_systematically"
        mcp_optimization: "test_result_correlation"
      - tool: "SolutionValidator"
        action: "verify_fix_effectiveness"
        mcp_optimization: "validation_tracking"

  production_incident_response:
    steps:
      - tool: "ImpactAssessor"
        action: "assess_incident_severity"
        mcp_optimization: "real_time_impact_monitoring"
      - tool: "SystemStabilizer"
        action: "implement_immediate_mitigation"
        mcp_optimization: "mitigation_effectiveness_tracking"
      - tool: "RootCauseInvestigator"
        action: "investigate_underlying_cause"
        mcp_optimization: "parallel_investigation_streams"
      - tool: "PermanentFixer"
        action: "implement_permanent_solution"
        mcp_optimization: "solution_validation"
      - tool: "PostMortemReporter"
        action: "document_lessons_learned"
        mcp_optimization: "knowledge_base_integration"

  intermittent_issue_hunting:
    steps:
      - tool: "DataCollector"
        action: "establish_continuous_monitoring"
        mcp_optimization: "long_term_data_storage"
      - tool: "PatternDetector"
        action: "identify_occurrence_patterns"
        mcp_optimization: "statistical_pattern_analysis"
      - tool: "CorrelationAnalyzer"
        action: "correlate_with_system_events"
        mcp_optimization: "multi_dimensional_correlation"
      - tool: "TriggerIdentifier"
        action: "isolate_triggering_conditions"
        mcp_optimization: "condition_modeling"
      - tool: "ReproductionEngine"
        action: "create_reliable_reproduction"
        mcp_optimization: "reproduction_optimization"

# Error Pattern Recognition
error_patterns:
  common_patterns:
    null_pointer_exceptions:
      detection_rules: ["null_access_patterns", "uninitialized_variables"]
      root_causes: ["missing_validation", "initialization_order", "race_conditions"]
      fix_strategies: ["defensive_programming", "null_object_pattern", "optional_types"]
    memory_leaks:
      detection_rules: ["growing_memory_usage", "unreleased_resources"]
      root_causes: ["missing_cleanup", "circular_references", "event_listener_leaks"]
      fix_strategies: ["resource_management", "weak_references", "disposal_patterns"]
    race_conditions:
      detection_rules: ["timing_dependent_failures", "inconsistent_results"]
      root_causes: ["shared_state_access", "insufficient_synchronization", "atomic_violations"]
      fix_strategies: ["proper_synchronization", "immutable_data", "actor_model"]
    performance_degradation:
      detection_rules: ["increasing_response_times", "resource_exhaustion"]
      root_causes: ["algorithmic_inefficiency", "resource_leaks", "scaling_bottlenecks"]
      fix_strategies: ["algorithm_optimization", "caching", "horizontal_scaling"]

# Quality Assurance Integration
quality_assurance:
  debugging_validation:
    fix_verification: "comprehensive_testing"
    regression_testing: "automated_regression_suite"
    performance_impact_assessment: "before_after_comparison"
    mcp_integration: "validation_workflow_optimizer"
  
  knowledge_management:
    solution_documentation: "searchable_knowledge_base"
    pattern_library_updates: "continuous_learning"
    team_knowledge_sharing: "collaborative_debugging"
    mcp_integration: "knowledge_optimization"

# Monitoring and Observability
monitoring:
  debugging_metrics:
    - issue_resolution_time
    - root_cause_identification_accuracy
    - fix_success_rate
    - debugging_session_efficiency
  
  mcp_metrics:
    - tool_response_times
    - cache_hit_rates_for_error_patterns
    - correlation_analysis_effectiveness
    - system_monitoring_overhead

# Backward Compatibility
backward_compatibility:
  non_mcp_fallback: true
  standard_debugging_tools: true
  graceful_degradation: true
  compatibility_mode: "full_debugging_capability"

# Security Configuration
security:
  debugging_access: "controlled_system_access"
  sensitive_data_handling: "privacy_preserving_debugging"
  system_modification: "safe_debugging_only"
  audit_logging: "comprehensive_debugging_audit"
  mcp_security: "secure_debugging_channels"

# Agent Personality Preservation
personality:
  approach: "systematic_methodical_investigation"
  communication_style: "logical_step_by_step_analysis"
  decision_making: "evidence_based_hypothesis_testing"
  expertise_demonstration: "thorough_root_cause_identification"
  
  core_traits:
    - "Pursues bugs with relentless systematic methodology"
    - "Never accepts coincidences - always seeks root causes"
    - "Documents every debugging step for reproducibility"
    - "Prioritizes production system stability during investigations"
    - "Maintains calm analytical approach under pressure"

# Success Metrics
success_metrics:
  performance_targets:
    debugging_speed_improvement: "40-60%"
    root_cause_identification_rate: "90%+"
    false_lead_reduction: "50%"
    issue_reproduction_success: "85%+"
  
  quality_targets:
    bug_fix_success_rate: "95%+"
    regression_prevention: "98%+"
    production_incident_resolution: "sub_2_hour_mttr"
    debugging_knowledge_capture: "100%"