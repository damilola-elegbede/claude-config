name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      
    - name: Make test script executable
      run: chmod +x tests/test.sh
      
    - name: Run test suite
      run: ./tests/test.sh
      
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: |
          test-results.log
          tests/**/*.log
        retention-days: 30

  validate-structure:
    name: Validate Repository Structure
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      
    - name: Check required files exist
      run: |
        echo "Checking required files..."
        required_files=(
          "README.md"
          "CLAUDE.md"
          "LICENSE"
          "tests/test.sh"
          "system-configs/.claude/commands/plan.md"
          "system-configs/.claude/commands/commit.md"
          "system-configs/.claude/commands/push.md"
          "system-configs/.claude/commands/test.md"
          "system-configs/.claude/commands/context.md"
          "system-configs/.claude/commands/sync.md"
        )
        
        for file in "${required_files[@]}"; do
          if [ ! -f "$file" ]; then
            echo "❌ Missing required file: $file"
            exit 1
          else
            echo "✓ Found: $file"
          fi
        done
        
        echo "All required files present!"
        
    - name: Check file permissions
      run: |
        if [ ! -x "tests/test.sh" ]; then
          echo "❌ tests/test.sh is not executable"
          exit 1
        fi
        echo "✓ tests/test.sh is executable"

  lint-markdown:
    name: Lint Markdown Files
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      
    - name: Lint markdown files
      uses: DavidAnson/markdownlint-cli2-action@v20
      with:
        config: '.markdownlint-cli2.jsonc'
        globs: '**/*.md'