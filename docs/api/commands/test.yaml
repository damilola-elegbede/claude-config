openapi: 3.0.3
info:
  title: Claude Test Command API
  description: Universal test discovery, execution, and generation API
  version: 1.0.0
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:3000/api
    description: Local development server
  - url: https://api.claude.ai/commands
    description: Production command server

paths:
  /commands/test:
    post:
      tags:
        - Test Execution
      summary: Discover and run tests
      description: |
        Universal test runner that automatically discovers, runs, and generates tests
        for any repository. Uses a 3-phase discovery algorithm: README analysis,
        package manager detection, and framework conventions.
      operationId: runTests
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestRequest'
            examples:
              auto_discover:
                summary: Auto-discover and run tests
                value:
                  options:
                    discovery: "auto"
              with_coverage:
                summary: Run tests with coverage
                value:
                  options:
                    coverage: true
                    outputFormat: "json"
              specific_framework:
                summary: Use specific test framework
                value:
                  framework: "jest"
                  options:
                    watch: false
                    coverage: true
              create_missing:
                summary: Generate tests if none exist
                value:
                  options:
                    create: true
                    framework: "pytest"
      responses:
        '200':
          description: Tests executed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestResponse'
              examples:
                successful_tests:
                  summary: All tests passed
                  value:
                    success: true
                    discovery:
                      method: "package.json"
                      command: "npm test"
                      framework: "jest"
                    execution:
                      exitCode: 0
                      testsRun: 156
                      testsPassed: 156
                      testsFailed: 0
                      testsSkipped: 0
                      duration: 12.5
                    coverage:
                      enabled: true
                      lines: 85.2
                      branches: 78.9
                      functions: 92.1
                      statements: 84.7
                failed_tests:
                  summary: Some tests failed
                  value:
                    success: false
                    discovery:
                      method: "README.md"
                      command: "pytest -v"
                      framework: "pytest"
                    execution:
                      exitCode: 1
                      testsRun: 48
                      testsPassed: 45
                      testsFailed: 3
                      testsSkipped: 0
                      duration: 8.7
                      failures:
                        - test: "test_user_authentication"
                          file: "tests/test_auth.py"
                          line: 23
                          error: "AssertionError: Expected 200, got 401"
                        - test: "test_password_validation"
                          file: "tests/test_auth.py"
                          line: 45
                          error: "ValidationError: Password too weak"
                tests_generated:
                  summary: Tests were generated and run
                  value:
                    success: true
                    generated: true
                    discovery:
                      method: "generation"
                      command: "pytest -v"
                      framework: "pytest"
                    generation:
                      testsCreated: 8
                      filesCreated: ["tests/test_main.py", "tests/test_utils.py"]
                      configCreated: "pytest.ini"
                    execution:
                      exitCode: 0
                      testsRun: 8
                      testsPassed: 8
                      testsFailed: 0
        '400':
          description: Invalid test request or configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                invalid_framework:
                  summary: Unsupported test framework
                  value:
                    error:
                      code: "UNSUPPORTED_FRAMEWORK"
                      message: "Test framework 'custom-framework' is not supported"
                      details:
                        requestedFramework: "custom-framework"
                        supportedFrameworks: ["jest", "pytest", "go", "cargo", "rspec"]
        '404':
          description: No tests found and generation disabled
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                no_tests_found:
                  summary: No tests discovered
                  value:
                    error:
                      code: "NO_TESTS_FOUND"
                      message: "No tests found and generation not requested"
                      details:
                        discoveryAttempts: 3
                        suggestions: ["Use --create flag", "Add test script to package.json"]
        '500':
          description: Test execution failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                execution_error:
                  summary: Test command failed to execute
                  value:
                    error:
                      code: "TEST_EXECUTION_FAILED"
                      message: "Test command failed to execute"
                      details:
                        command: "npm test"
                        exitCode: 127
                        stderr: "command not found: jest"

  /commands/test/discover:
    get:
      tags:
        - Test Discovery
      summary: Discover available test commands
      description: |
        Discover test commands without executing them using the 3-phase algorithm:
        README analysis, package manager detection, and framework conventions.
      operationId: discoverTests
      parameters:
        - name: method
          in: query
          description: Specific discovery method to use
          required: false
          schema:
            type: string
            enum: [readme, package-manager, conventions, all]
            default: all
      responses:
        '200':
          description: Test discovery completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscoveryResponse'
              examples:
                multiple_commands:
                  summary: Multiple test commands found
                  value:
                    success: true
                    commands:
                      - method: "package.json"
                        command: "npm test"
                        framework: "jest"
                        confidence: 0.95
                        description: "Jest test suite via npm script"
                      - method: "package.json"
                        command: "npm run test:integration"
                        framework: "jest"
                        confidence: 0.85
                        description: "Integration tests"
                      - method: "README.md"
                        command: "make test"
                        framework: "unknown"
                        confidence: 0.70
                        description: "Make target from README"
                    recommendation:
                      command: "npm test"
                      reason: "Highest confidence standard test command"
                no_tests:
                  summary: No tests discovered
                  value:
                    success: true
                    commands: []
                    recommendation: null
                    suggestions:
                      - "Add test script to package.json"
                      - "Create tests/ directory with test files"
                      - "Use /test --create to generate test suite"

  /commands/test/generate:
    post:
      tags:
        - Test Generation
      summary: Generate test suite
      description: |
        Generate comprehensive test suites for projects without existing tests.
        Uses test-engineer agent to create framework-appropriate tests.
      operationId: generateTests
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateRequest'
      responses:
        '200':
          description: Test suite generated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateResponse'
              examples:
                jest_generation:
                  summary: Jest test suite generated
                  value:
                    success: true
                    framework: "jest"
                    generation:
                      testsCreated: 12
                      filesCreated:
                        - "src/__tests__/utils.test.js"
                        - "src/__tests__/auth.test.js"
                        - "src/__tests__/api.test.js"
                      configFiles:
                        - "jest.config.js"
                        - "package.json" # updated with test scripts
                      coverage: true
                    validation:
                      testsRun: 12
                      testsPassed: 12
                      testsFailed: 0
                      initialCoverage: 78.5

  /commands/test/frameworks:
    get:
      tags:
        - Test Discovery
      summary: List supported frameworks
      description: Get list of all supported test frameworks and their capabilities
      operationId: getSupportedFrameworks
      responses:
        '200':
          description: Supported frameworks retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FrameworksResponse'

  /commands/test/status:
    get:
      tags:
        - Test Status
      summary: Get test status and history
      description: Get current test status, last run results, and execution history
      operationId: getTestStatus
      responses:
        '200':
          description: Test status retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestStatus'

components:
  schemas:
    TestRequest:
      type: object
      properties:
        framework:
          type: string
          description: Specific test framework to use
          enum: [jest, vitest, pytest, go, cargo, rspec, mocha, jasmine, phpunit, dotnet]
          example: "jest"
        command:
          type: string
          description: Custom test command to execute
          example: "npm run test:unit"
        options:
          type: object
          properties:
            discovery:
              type: string
              enum: [auto, readme, package-manager, conventions]
              default: auto
              description: Discovery method to use
            coverage:
              type: boolean
              default: false
              description: Enable coverage reporting
            watch:
              type: boolean
              default: false
              description: Run tests in watch mode
            create:
              type: boolean
              default: false
              description: Generate test suite if none exists
            outputFormat:
              type: string
              enum: [console, json, junit, tap]
              default: console
              description: Test output format
            parallel:
              type: boolean
              default: true
              description: Run tests in parallel when possible
            bail:
              type: boolean
              default: false
              description: Stop on first test failure
            verbose:
              type: boolean
              default: false
              description: Enable verbose output
          additionalProperties: false
        target:
          type: array
          items:
            type: string
          description: Specific files or directories to test
          example: ["src/auth/", "tests/integration/"]

    TestResponse:
      type: object
      required:
        - success
        - discovery
        - execution
      properties:
        success:
          type: boolean
          description: Whether all tests passed
        generated:
          type: boolean
          description: Whether tests were generated during execution
        discovery:
          $ref: '#/components/schemas/TestDiscovery'
        generation:
          $ref: '#/components/schemas/TestGeneration'
        execution:
          $ref: '#/components/schemas/TestExecution'
        coverage:
          $ref: '#/components/schemas/CoverageReport'
        performance:
          $ref: '#/components/schemas/TestPerformance'
        artifacts:
          type: array
          items:
            type: string
          description: Generated artifacts (reports, logs, etc.)

    TestDiscovery:
      type: object
      required:
        - method
        - command
        - framework
      properties:
        method:
          type: string
          enum: [package.json, README.md, conventions, generation, manual]
          description: How the test command was discovered
        command:
          type: string
          description: Test command that was executed
        framework:
          type: string
          description: Detected or specified test framework
        confidence:
          type: number
          format: float
          minimum: 0
          maximum: 1
          description: Confidence in discovery method (0-1)
        alternatives:
          type: array
          items:
            type: string
          description: Alternative test commands found

    TestGeneration:
      type: object
      properties:
        testsCreated:
          type: integer
          description: Number of test cases generated
        filesCreated:
          type: array
          items:
            type: string
          description: Test files that were created
        configCreated:
          type: string
          description: Configuration file created (if any)
        coverageEnabled:
          type: boolean
          description: Whether coverage was configured
        agent:
          type: string
          description: Agent used for generation
          example: "test-engineer"

    TestExecution:
      type: object
      required:
        - exitCode
        - testsRun
        - testsPassed
        - testsFailed
        - duration
      properties:
        exitCode:
          type: integer
          description: Exit code of test command
        testsRun:
          type: integer
          description: Total number of tests executed
        testsPassed:
          type: integer
          description: Number of tests that passed
        testsFailed:
          type: integer
          description: Number of tests that failed
        testsSkipped:
          type: integer
          description: Number of tests that were skipped
        duration:
          type: number
          format: float
          description: Test execution duration in seconds
        failures:
          type: array
          items:
            $ref: '#/components/schemas/TestFailure'
          description: Details of failed tests
        output:
          type: string
          description: Raw test output (if requested)
        environment:
          type: object
          properties:
            node:
              type: string
            python:
              type: string
            go:
              type: string
            os:
              type: string
          description: Test environment details

    TestFailure:
      type: object
      required:
        - test
        - error
      properties:
        test:
          type: string
          description: Name of failed test
        file:
          type: string
          description: File containing the test
        line:
          type: integer
          description: Line number of failure
        error:
          type: string
          description: Error message
        stack:
          type: string
          description: Stack trace (if available)
        expected:
          type: string
          description: Expected value (if applicable)
        actual:
          type: string
          description: Actual value (if applicable)

    CoverageReport:
      type: object
      properties:
        enabled:
          type: boolean
          description: Whether coverage was enabled
        lines:
          type: number
          format: float
          description: Line coverage percentage
        branches:
          type: number
          format: float
          description: Branch coverage percentage
        functions:
          type: number
          format: float
          description: Function coverage percentage
        statements:
          type: number
          format: float
          description: Statement coverage percentage
        uncoveredFiles:
          type: array
          items:
            type: string
          description: Files with low coverage
        reportPath:
          type: string
          description: Path to detailed coverage report

    TestPerformance:
      type: object
      properties:
        slowestTests:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              duration:
                type: number
                format: float
              file:
                type: string
          description: Tests that took longest to execute
        memoryUsage:
          type: object
          properties:
            peak:
              type: integer
            average:
              type: integer
          description: Memory usage during test execution
        parallelization:
          type: object
          properties:
            enabled:
              type: boolean
            workers:
              type: integer
            efficiency:
              type: number
              format: float
          description: Parallel execution details

    DiscoveryResponse:
      type: object
      required:
        - success
        - commands
      properties:
        success:
          type: boolean
          description: Whether discovery was successful
        commands:
          type: array
          items:
            $ref: '#/components/schemas/DiscoveredCommand'
          description: Test commands that were discovered
        recommendation:
          $ref: '#/components/schemas/CommandRecommendation'
        suggestions:
          type: array
          items:
            type: string
          description: Suggestions if no tests found

    DiscoveredCommand:
      type: object
      required:
        - method
        - command
        - framework
        - confidence
      properties:
        method:
          type: string
          description: Discovery method used
        command:
          type: string
          description: Test command
        framework:
          type: string
          description: Detected framework
        confidence:
          type: number
          format: float
          minimum: 0
          maximum: 1
          description: Confidence score
        description:
          type: string
          description: Human-readable description
        estimatedDuration:
          type: number
          format: float
          description: Estimated execution time in seconds

    CommandRecommendation:
      type: object
      properties:
        command:
          type: string
          description: Recommended command to use
        reason:
          type: string
          description: Reason for recommendation

    GenerateRequest:
      type: object
      properties:
        framework:
          type: string
          description: Test framework to use for generation
          enum: [jest, vitest, pytest, go, cargo, rspec, mocha]
        language:
          type: string
          description: Programming language (auto-detected if not specified)
          enum: [javascript, typescript, python, go, rust, ruby, php, csharp]
        patterns:
          type: object
          properties:
            testFiles:
              type: array
              items:
                type: string
              description: File patterns to create tests for
            exclude:
              type: array
              items:
                type: string
              description: Patterns to exclude from test generation
          description: File patterns for test generation
        options:
          type: object
          properties:
            coverage:
              type: boolean
              default: true
              description: Configure coverage reporting
            integration:
              type: boolean
              default: false
              description: Generate integration tests
            unit:
              type: boolean
              default: true
              description: Generate unit tests
            mocking:
              type: boolean
              default: true
              description: Include mocking examples
          description: Generation options

    GenerateResponse:
      type: object
      required:
        - success
        - framework
        - generation
      properties:
        success:
          type: boolean
          description: Whether generation was successful
        framework:
          type: string
          description: Test framework used
        generation:
          $ref: '#/components/schemas/TestGeneration'
        validation:
          type: object
          properties:
            testsRun:
              type: integer
            testsPassed:
              type: integer
            testsFailed:
              type: integer
            initialCoverage:
              type: number
              format: float
          description: Results of running generated tests

    FrameworksResponse:
      type: object
      required:
        - frameworks
      properties:
        frameworks:
          type: array
          items:
            $ref: '#/components/schemas/SupportedFramework'
          description: List of supported test frameworks

    SupportedFramework:
      type: object
      required:
        - name
        - language
        - features
      properties:
        name:
          type: string
          description: Framework name
          example: "jest"
        language:
          type: array
          items:
            type: string
          description: Supported languages
          example: ["javascript", "typescript"]
        features:
          type: object
          properties:
            coverage:
              type: boolean
            watch:
              type: boolean
            parallel:
              type: boolean
            mocking:
              type: boolean
            snapshots:
              type: boolean
          description: Supported features
        commands:
          type: object
          properties:
            run:
              type: string
            coverage:
              type: string
            watch:
              type: string
          description: Standard commands for this framework
        confidence:
          type: number
          format: float
          description: Confidence in framework detection

    TestStatus:
      type: object
      properties:
        lastRun:
          type: string
          format: date-time
          description: Timestamp of last test execution
        lastResult:
          type: object
          properties:
            success:
              type: boolean
            testsRun:
              type: integer
            duration:
              type: number
              format: float
          description: Results of last test run
        currentFramework:
          type: string
          description: Currently configured test framework
        coverage:
          type: object
          properties:
            current:
              type: number
              format: float
            trend:
              type: string
              enum: [improving, stable, declining]
          description: Coverage information
        history:
          type: array
          items:
            type: object
            properties:
              timestamp:
                type: string
                format: date-time
              success:
                type: boolean
              duration:
                type: number
                format: float
              testsRun:
                type: integer
          description: Recent test execution history

    ErrorResponse:
      type: object
      required:
        - error
      properties:
        error:
          type: object
          required:
            - code
            - message
          properties:
            code:
              type: string
              description: Machine-readable error code
            message:
              type: string
              description: Human-readable error message
            details:
              type: object
              description: Additional error context
              additionalProperties: true

  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - ApiKeyAuth: []
  - BearerAuth: []

tags:
  - name: Test Execution
    description: Test discovery, execution, and management
  - name: Test Discovery
    description: Automatic test command discovery
  - name: Test Generation
    description: Automated test suite generation
  - name: Test Status
    description: Test status and history tracking
