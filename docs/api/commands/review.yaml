openapi: 3.0.3
info:
  title: Claude Review Command API
  description: Multi-agent code review and quality assurance API
  version: 1.0.0
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:3000/api
    description: Local development server
  - url: https://api.claude.ai/commands
    description: Production command server

paths:
  /commands/review:
    post:
      tags:
        - Code Review
      summary: Execute multi-agent code review
      description: |
        Multi-agent code review with comprehensive documentation analysis for context,
        orchestrating specialized agents for security, performance, testing, and
        accessibility validation.
        
        Review modes:
        - **Default**: Review changed files only (fast feedback)
        - **Full**: Review entire codebase (comprehensive analysis)
        - **Focused**: Security, performance, or other specific concerns
      operationId: executeCodeReview
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewRequest'
            examples:
              default_review:
                summary: Review changed files
                value:
                  scope: "changed"
                  options:
                    autoFix: false
              full_review:
                summary: Full repository review
                value:
                  scope: "full"
                  agents: ["code-reviewer", "security-auditor", "performance-specialist", "test-engineer"]
              security_focused:
                summary: Security-focused review
                value:
                  scope: "changed"
                  focus: "security"
                  agents: ["security-auditor", "code-reviewer"]
              specific_target:
                summary: Review specific files
                value:
                  scope: "custom"
                  target: ["src/auth/", "tests/auth/"]
                  options:
                    strict: true
      responses:
        '200':
          description: Code review completed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewResponse'
              examples:
                clean_code:
                  summary: No critical issues found
                  value:
                    success: true
                    overallScore: 8.7
                    scope: "changed"
                    filesReviewed: 5
                    context:
                      documentationRead: true
                      projectType: "Node.js REST API"
                      architecturePatterns: ["MVC", "JWT Auth"]
                    agents:
                      - name: "code-reviewer"
                        status: "completed"
                        duration: 8.2
                        issues: 2
                      - name: "security-auditor"
                        status: "completed"
                        duration: 5.1
                        issues: 0
                    summary:
                      critical: 0
                      high: 0
                      medium: 2
                      low: 3
                      total: 5
                    issues: []
                    recommendations:
                      - "Consider adding input validation to user registration endpoint"
                      - "Add unit tests for new authentication methods"
                issues_found:
                  summary: Issues requiring attention
                  value:
                    success: false
                    overallScore: 6.2
                    scope: "changed"
                    filesReviewed: 8
                    agents:
                      - name: "code-reviewer"
                        status: "completed"
                        duration: 12.3
                        issues: 5
                      - name: "security-auditor"
                        status: "completed"
                        duration: 8.7
                        issues: 2
                      - name: "test-engineer"
                        status: "completed"
                        duration: 6.1
                        issues: 3
                    summary:
                      critical: 1
                      high: 2
                      medium: 4
                      low: 3
                      total: 10
                    issues:
                      - id: "SEC001"
                        severity: "critical"
                        type: "security"
                        agent: "security-auditor"
                        file: "src/auth/login.js"
                        line: 45
                        title: "SQL Injection Vulnerability"
                        description: "User input directly concatenated into SQL query"
                        suggestion: "Use parameterized queries or ORM methods"
                        autoFixable: false
                        blocking: true
                      - id: "PERF001"
                        severity: "high"
                        type: "performance"
                        agent: "performance-specialist"
                        file: "src/api/users.js"
                        line: 67
                        title: "N+1 Query Problem"
                        description: "Database query executed in loop"
                        suggestion: "Use JOIN or batch loading"
                        autoFixable: false
                        blocking: false
        '400':
          description: Invalid review request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                invalid_scope:
                  summary: Invalid review scope
                  value:
                    error:
                      code: "INVALID_REVIEW_SCOPE"
                      message: "Invalid review scope specified"
                      details:
                        providedScope: "invalid"
                        validScopes: ["changed", "full", "custom"]
                invalid_agents:
                  summary: Unknown agent specified
                  value:
                    error:
                      code: "UNKNOWN_AGENT"
                      message: "One or more specified agents are not available"
                      details:
                        unknownAgents: ["invalid-agent"]
                        availableAgents: ["code-reviewer", "security-auditor", "performance-specialist"]
        '422':
          description: Review cannot be performed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                no_changes:
                  summary: No changes to review
                  value:
                    error:
                      code: "NO_CHANGES_TO_REVIEW"
                      message: "No changed files found for review"
                      details:
                        gitStatus: "working tree clean"
                        suggestions: ["Make changes to files", "Use --full flag for complete review"]
        '500':
          description: Review execution failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /commands/review/agents:
    get:
      tags:
        - Agent Management
      summary: List available review agents
      description: Get list of all available agents and their capabilities
      operationId: getAvailableAgents
      responses:
        '200':
          description: Available agents retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentsResponse'

  /commands/review/fix:
    post:
      tags:
        - Auto-Remediation
      summary: Auto-fix review issues
      description: |
        Automatically fix issues found during code review using specialized agents.
        Only safe, automated fixes are applied - manual review issues remain unchanged.
      operationId: autoFixIssues
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FixRequest'
      responses:
        '200':
          description: Auto-fix completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FixResponse'
              examples:
                fixes_applied:
                  summary: Some issues automatically fixed
                  value:
                    success: true
                    fixesApplied: 8
                    issuesRemaining: 3
                    agents:
                      - name: "code-reviewer"
                        fixesApplied: 5
                        issues: ["formatting", "imports", "unused-variables"]
                      - name: "security-auditor"
                        fixesApplied: 0
                        reason: "Security issues require manual review"
                    changes:
                      - file: "src/utils.js"
                        type: "formatting"
                        description: "Applied Prettier formatting"
                      - file: "src/auth.js"
                        type: "imports"
                        description: "Organized import statements"
                    remainingIssues:
                      - severity: "critical"
                        type: "security"
                        description: "SQL injection vulnerability requires manual fix"

  /commands/review/report:
    get:
      tags:
        - Reports
      summary: Get detailed review report
      description: Generate comprehensive review report with detailed findings and metrics
      operationId: getReviewReport
      parameters:
        - name: reviewId
          in: query
          description: Specific review execution to report on
          required: false
          schema:
            type: string
        - name: format
          in: query
          description: Report format
          required: false
          schema:
            type: string
            enum: [json, html, markdown, pdf]
            default: json
      responses:
        '200':
          description: Review report generated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedReport'
            text/html:
              schema:
                type: string
                description: HTML formatted report
            text/markdown:
              schema:
                type: string
                description: Markdown formatted report

  /commands/review/config:
    get:
      tags:
        - Configuration
      summary: Get review configuration
      description: Get current review configuration and settings
      operationId: getReviewConfig
      responses:
        '200':
          description: Review configuration retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewConfig'

    put:
      tags:
        - Configuration
      summary: Update review configuration
      description: Update review configuration and settings
      operationId: updateReviewConfig
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewConfig'
      responses:
        '200':
          description: Configuration updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigUpdateResponse'

components:
  schemas:
    ReviewRequest:
      type: object
      properties:
        scope:
          type: string
          enum: [changed, full, custom]
          default: changed
          description: |
            Scope of files to review:
            - changed: Only files modified in current branch
            - full: Entire repository
            - custom: Specific files/directories
        target:
          type: array
          items:
            type: string
          description: Specific files or directories (when scope is custom)
          example: ["src/auth/", "tests/auth/"]
        focus:
          type: string
          enum: [security, performance, testing, accessibility, documentation]
          description: Specific area of focus for the review
        agents:
          type: array
          items:
            type: string
          description: Specific agents to deploy (overrides automatic selection)
          example: ["code-reviewer", "security-auditor", "performance-specialist"]
        options:
          type: object
          properties:
            autoFix:
              type: boolean
              default: false
              description: Automatically fix issues when possible
            strict:
              type: boolean
              default: false
              description: Enable strict review mode with higher standards
            includeDocumentation:
              type: boolean
              default: true
              description: Include documentation analysis for context
            parallelExecution:
              type: boolean
              default: true
              description: Run agents in parallel for faster execution
            generateReport:
              type: boolean
              default: true
              description: Generate detailed review report
          additionalProperties: false
        thresholds:
          type: object
          properties:
            minScore:
              type: number
              format: float
              minimum: 0
              maximum: 10
              description: Minimum acceptable overall score
            maxCriticalIssues:
              type: integer
              minimum: 0
              description: Maximum number of critical issues allowed
            maxHighIssues:
              type: integer
              minimum: 0
              description: Maximum number of high priority issues allowed
          description: Quality thresholds for the review

    ReviewResponse:
      type: object
      required:
        - success
        - overallScore
        - scope
        - filesReviewed
        - agents
        - summary
      properties:
        success:
          type: boolean
          description: Whether review completed without critical blocking issues
        overallScore:
          type: number
          format: float
          minimum: 0
          maximum: 10
          description: Overall code quality score (0-10)
        scope:
          type: string
          enum: [changed, full, custom]
          description: Scope of review that was performed
        filesReviewed:
          type: integer
          description: Number of files that were reviewed
        reviewId:
          type: string
          description: Unique identifier for this review execution
        duration:
          type: number
          format: float
          description: Total review duration in seconds
        context:
          $ref: '#/components/schemas/ReviewContext'
        agents:
          type: array
          items:
            $ref: '#/components/schemas/AgentResult'
          description: Results from each agent that participated
        summary:
          $ref: '#/components/schemas/IssueSummary'
        issues:
          type: array
          items:
            $ref: '#/components/schemas/ReviewIssue'
          description: Detailed list of issues found
        recommendations:
          type: array
          items:
            type: string
          description: High-level recommendations for improvement
        metrics:
          $ref: '#/components/schemas/ReviewMetrics'

    ReviewContext:
      type: object
      properties:
        documentationRead:
          type: boolean
          description: Whether project documentation was analyzed
        projectType:
          type: string
          description: Detected project type
          example: "Node.js REST API"
        architecturePatterns:
          type: array
          items:
            type: string
          description: Detected architecture patterns
          example: ["MVC", "JWT Auth", "Microservices"]
        frameworks:
          type: array
          items:
            type: string
          description: Detected frameworks and libraries
        securityModel:
          type: string
          description: Identified security model
        testingStrategy:
          type: string
          description: Current testing approach

    AgentResult:
      type: object
      required:
        - name
        - status
        - duration
        - issues
      properties:
        name:
          type: string
          description: Name of the agent
        status:
          type: string
          enum: [completed, failed, skipped, timeout]
          description: Agent execution status
        duration:
          type: number
          format: float
          description: Agent execution time in seconds
        issues:
          type: integer
          description: Number of issues found by this agent
        confidence:
          type: number
          format: float
          minimum: 0
          maximum: 1
          description: Agent's confidence in its findings
        coverage:
          type: object
          properties:
            filesAnalyzed:
              type: integer
            linesAnalyzed:
              type: integer
            completeness:
              type: number
              format: float
          description: Analysis coverage metrics
        error:
          type: string
          description: Error message if agent failed

    IssueSummary:
      type: object
      required:
        - critical
        - high
        - medium
        - low
        - total
      properties:
        critical:
          type: integer
          description: Number of critical issues (block deployment)
        high:
          type: integer
          description: Number of high priority issues
        medium:
          type: integer
          description: Number of medium priority issues
        low:
          type: integer
          description: Number of low priority issues
        total:
          type: integer
          description: Total number of issues found
        autoFixable:
          type: integer
          description: Number of issues that can be automatically fixed
        blocking:
          type: integer
          description: Number of issues that block deployment

    ReviewIssue:
      type: object
      required:
        - id
        - severity
        - type
        - agent
        - title
        - description
      properties:
        id:
          type: string
          description: Unique issue identifier
        severity:
          type: string
          enum: [critical, high, medium, low]
          description: Issue severity level
        type:
          type: string
          enum: [security, performance, testing, quality, style, documentation, accessibility]
          description: Category of issue
        agent:
          type: string
          description: Agent that identified the issue
        file:
          type: string
          description: File containing the issue
        line:
          type: integer
          description: Line number where issue occurs
        column:
          type: integer
          description: Column number (if applicable)
        title:
          type: string
          description: Brief issue title
        description:
          type: string
          description: Detailed description of the issue
        suggestion:
          type: string
          description: Suggested fix or improvement
        codeSnippet:
          type: string
          description: Relevant code snippet
        autoFixable:
          type: boolean
          description: Whether issue can be automatically fixed
        blocking:
          type: boolean
          description: Whether issue blocks deployment
        references:
          type: array
          items:
            type: string
          description: Links to documentation or standards
        confidence:
          type: number
          format: float
          minimum: 0
          maximum: 1
          description: Confidence in this finding

    ReviewMetrics:
      type: object
      properties:
        codeQuality:
          type: object
          properties:
            complexity:
              type: number
              format: float
            maintainability:
              type: number
              format: float
            readability:
              type: number
              format: float
        security:
          type: object
          properties:
            vulnerabilities:
              type: integer
            riskScore:
              type: number
              format: float
            complianceScore:
              type: number
              format: float
        performance:
          type: object
          properties:
            algorithmicComplexity:
              type: string
            memoryEfficiency:
              type: number
              format: float
            potentialBottlenecks:
              type: integer
        testing:
          type: object
          properties:
            coverage:
              type: number
              format: float
            testQuality:
              type: number
              format: float
            missingTests:
              type: integer

    AgentsResponse:
      type: object
      required:
        - agents
      properties:
        agents:
          type: array
          items:
            $ref: '#/components/schemas/AvailableAgent'
          description: List of available review agents

    AvailableAgent:
      type: object
      required:
        - name
        - description
        - capabilities
      properties:
        name:
          type: string
          description: Agent name
        description:
          type: string
          description: Agent description and purpose
        capabilities:
          type: array
          items:
            type: string
          description: What this agent can analyze
        languages:
          type: array
          items:
            type: string
          description: Programming languages supported
        frameworks:
          type: array
          items:
            type: string
          description: Frameworks this agent specializes in
        averageDuration:
          type: number
          format: float
          description: Average execution time in seconds
        reliability:
          type: number
          format: float
          minimum: 0
          maximum: 1
          description: Agent reliability score

    FixRequest:
      type: object
      properties:
        reviewId:
          type: string
          description: Review execution to fix issues from
        issueIds:
          type: array
          items:
            type: string
          description: Specific issue IDs to fix (if not all)
        agents:
          type: array
          items:
            type: string
          description: Specific agents to use for fixes
        options:
          type: object
          properties:
            onlySafeFixes:
              type: boolean
              default: true
              description: Only apply fixes that are guaranteed safe
            createBackup:
              type: boolean
              default: true
              description: Create backup before applying fixes
            commitFixes:
              type: boolean
              default: false
              description: Automatically commit applied fixes

    FixResponse:
      type: object
      required:
        - success
        - fixesApplied
        - issuesRemaining
      properties:
        success:
          type: boolean
          description: Whether fix operation completed successfully
        fixesApplied:
          type: integer
          description: Number of issues that were automatically fixed
        issuesRemaining:
          type: integer
          description: Number of issues that still require manual attention
        agents:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              fixesApplied:
                type: integer
              issues:
                type: array
                items:
                  type: string
              reason:
                type: string
          description: Results from each fix agent
        changes:
          type: array
          items:
            $ref: '#/components/schemas/AppliedFix'
          description: Details of changes that were made
        remainingIssues:
          type: array
          items:
            type: object
            properties:
              severity:
                type: string
              type:
                type: string
              description:
                type: string
              reason:
                type: string
          description: Issues that could not be automatically fixed
        backupPath:
          type: string
          description: Path to backup (if created)

    AppliedFix:
      type: object
      required:
        - file
        - type
        - description
      properties:
        file:
          type: string
          description: File that was modified
        type:
          type: string
          description: Type of fix applied
        description:
          type: string
          description: Description of the change
        linesChanged:
          type: integer
          description: Number of lines modified
        agent:
          type: string
          description: Agent that applied the fix

    DetailedReport:
      type: object
      required:
        - reviewId
        - summary
        - timestamp
      properties:
        reviewId:
          type: string
          description: Unique review identifier
        timestamp:
          type: string
          format: date-time
          description: When review was executed
        summary:
          $ref: '#/components/schemas/IssueSummary'
        executiveSummary:
          type: string
          description: High-level summary for stakeholders
        scope:
          type: object
          properties:
            type:
              type: string
            filesReviewed:
              type: integer
            linesAnalyzed:
              type: integer
        qualityMetrics:
          $ref: '#/components/schemas/ReviewMetrics'
        agentReports:
          type: array
          items:
            type: object
            properties:
              agent:
                type: string
              findings:
                type: array
                items:
                  $ref: '#/components/schemas/ReviewIssue'
              recommendations:
                type: array
                items:
                  type: string
        trends:
          type: object
          properties:
            qualityTrend:
              type: string
              enum: [improving, stable, declining]
            issuesTrend:
              type: string
              enum: [decreasing, stable, increasing]
            comparisonPrevious:
              type: object
              properties:
                scoreChange:
                  type: number
                  format: float
                issueChange:
                  type: integer

    ReviewConfig:
      type: object
      properties:
        defaultScope:
          type: string
          enum: [changed, full]
          default: changed
        defaultAgents:
          type: array
          items:
            type: string
        thresholds:
          type: object
          properties:
            minScore:
              type: number
              format: float
            maxCriticalIssues:
              type: integer
            maxHighIssues:
              type: integer
        autoFix:
          type: object
          properties:
            enabled:
              type: boolean
            safeOnly:
              type: boolean
            createBackup:
              type: boolean
        notifications:
          type: object
          properties:
            onCompletion:
              type: boolean
            onCriticalIssues:
              type: boolean
            webhookUrl:
              type: string
        reporting:
          type: object
          properties:
            generateHtml:
              type: boolean
            includeMetrics:
              type: boolean
            retentionDays:
              type: integer

    ConfigUpdateResponse:
      type: object
      required:
        - success
        - updated
      properties:
        success:
          type: boolean
          description: Whether configuration was updated successfully
        updated:
          type: array
          items:
            type: string
          description: Configuration keys that were updated
        validation:
          type: object
          properties:
            valid:
              type: boolean
            errors:
              type: array
              items:
                type: string
            warnings:
              type: array
              items:
                type: string

    ErrorResponse:
      type: object
      required:
        - error
      properties:
        error:
          type: object
          required:
            - code
            - message
          properties:
            code:
              type: string
              description: Machine-readable error code
            message:
              type: string
              description: Human-readable error message
            details:
              type: object
              description: Additional error context
              additionalProperties: true

  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - ApiKeyAuth: []
  - BearerAuth: []

tags:
  - name: Code Review
    description: Multi-agent code review and quality analysis
  - name: Agent Management
    description: Review agent configuration and capabilities
  - name: Auto-Remediation
    description: Automated issue fixing and remediation
  - name: Reports
    description: Detailed review reporting and analytics
  - name: Configuration
    description: Review configuration and settings management