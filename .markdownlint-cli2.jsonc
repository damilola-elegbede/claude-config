{
  // Markdownlint configuration for Claude configuration repository
  // Comprehensive configuration for agent YAML front-matter and technical documentation
  "config": {
    "default": true,
    
    // MD001: Heading levels should only increment by one level at a time
    "MD001": true,
    
    // MD009: Trailing spaces (allow up to 2 for line breaks)
    "MD009": { "br_spaces": 2 },
    
    // MD013: Line length (set reasonable limit for technical docs)
    "MD013": { 
      "line_length": 150, 
      "tables": false, 
      "code_blocks": false,
      "headers": false
    },
    
    // MD022: Headings should be surrounded by blank lines
    "MD022": true,
    
    // MD023: Headings must start at beginning of line (allow indented headings in lists)
    "MD023": false,
    
    // MD024: No duplicate headings (allow in different sections)
    "MD024": { "siblings_only": true },
    
    // MD025: Multiple top level headings (allow with front matter)
    "MD025": { "front_matter_title": "" },
    
    // MD026: Trailing punctuation in heading (allow colons for technical headings)
    "MD026": { "punctuation": ".,;!" },
    
    // MD031: Fenced code blocks should be surrounded by blank lines
    "MD031": true,
    
    // MD032: Lists should be surrounded by blank lines
    "MD032": true,
    
    // MD033: Inline HTML (allow comprehensive set for technical docs and XML elements)
    "MD033": {
      "allowed_elements": [
        // Standard HTML elements
        "br", "kbd", "sub", "sup", "details", "summary", "div", "span", "center",
        "img", "a", "strong", "em", "code", "pre", "blockquote", "p", "h1", "h2", "h3", "h4", "h5", "h6",
        
        // Technical documentation elements
        "id", "commentary", "metadata", "api-version", "specification-standard", 
        "authentication", "base-url", "executive-summary", "api-architecture", 
        "service-endpoints", "category", "authentication-setup", "auth-methods", 
        "method", "rate-limiting", "tier", "api-endpoint", "description", 
        "request-specification", "headers", "request-body", "response-specification", 
        "success-response", "degraded-response", "error-responses", "error",
        "query-parameters", "path-parameters", "client-library", "installation",
        "usage-examples", "example", "error-handling", "metrics-format",
        "implementation-notes", "deployment-requirements", "performance-characteristics",
        "security-features",
        
        // Intelligence Layer XML elements
        "version", "status", "last-updated", "complexity", "intelligence-capabilities",
        "predictive-analytics", "adaptive-orchestration", "behavioral-intelligence",
        "architecture-overview", "core-components", "component", "agent-capabilities",
        "prediction-models", "model", "integration-architecture", "monitoring-systems",
        "orchestration-layer", "notification-systems", "ml-infrastructure", "training-pipeline",
        "data-collection", "feature-engineering", "model-training", "validation-testing",
        "serving-architecture", "inference-layer", "real-time-serving", "batch-processing",
        "implementation-phase", "tasks", "task", "deliverables", "deployment-requirements",
        "infrastructure", "kubernetes-cluster", "databases", "time-series-db", "feature-store",
        "model-registry", "monitoring-stack", "installation-guide", "step", "commands",
        "configuration-options", "environment-variables", "variable", "config-files", "file",
        "performance-metrics", "latency", "real-time-predictions", "batch-predictions",
        "model-serving", "accuracy", "performance-prediction", "resource-optimization",
        "failure-prevention", "resource-usage", "cpu", "memory", "storage", "network",
        "troubleshooting", "issue", "problem", "symptoms", "solutions", "solution",
        "diagnostic-tools", "health-checks", "performance-monitoring", "security-implementation",
        "access-control", "data-protection", "model-security", "roadmap", "phase-4",
        "phase-5", "experimental-features", "success-criteria", "monitoring-kpis",
        
        // MLOps Guide XML elements
        "guide-type", "target-audience", "mlops-architecture", "pipeline-stages", "stage",
        "infrastructure-stack", "specifications", "resource-requirements", "performance-targets",
        "data-management", "data-pipeline", "ingestion-workflow", "experiment-setup",
        "hyperparameter-optimization", "model-validation", "deployment-pipeline", "ci-cd-setup",
        "canary-deployment", "rollback-mechanism", "monitoring-setup", "metrics-collection",
        "drift-detection", "alerting-system", "dashboard-setup", "grafana-dashboard",
        "custom-dashboard", "performance-optimization", "model-optimization", "serving-optimization",
        "resource-optimization", "training-issues", "serving-issues", "maintenance-procedures",
        "routine-maintenance", "disaster-recovery", "operational-runbook", "emergency-procedures",
        "procedure", "steps", "contact-info", "automation", "data-validation",
        
        // Performance Predictor specific XML elements
        "agent-capabilities", "core-functions", "function", "expertise-domains", "domain",
        "capabilities", "model-specification", "architecture", "input-features", "model-architecture",
        "output-predictions", "performance-metrics", "optimization-objectives", "input-context",
        "recommendation-engine", "optimization-outcomes", "anomaly-detection", "failure-classification",
        "early-warning-system", "integration-setup", "data-pipeline", "metrics-collection",
        "feature-computation", "prediction-serving", "real-time-api", "streaming-predictions",
        "orchestration-integration", "agent-selection", "performance-aware-routing",
        "resource-optimization", "dynamic-scaling", "configuration-options", "model-parameters",
        "feature-engineering", "alert-configuration", "notification-channels", "usage-example",
        "best-practices", "training-practices", "practice", "optimization-practices",
        "operational-practices", "troubleshooting-guide", "root-causes", "solutions",
        "diagnostic-tools", "validation-scripts", "monitoring-queries", "implementation-checklist",
        "deployment-validation",
        
        // Additional XML elements
        "agent-name", "capability-level", "specialization", "root-causes", "symptoms",
        
        // ANTML elements (avoid colon conflicts)
        "antml-function-calls", "antml-invoke", "antml-parameter"
      ]
    },
    
    // MD034: Bare URL used (disable for technical docs with many URLs)
    "MD034": false,
    
    // MD036: Emphasis used instead of a heading (allow with punctuation)
    "MD036": { "punctuation": ".,;:!?" },
    
    // MD040: Fenced code blocks should have language specified
    "MD040": {
      "allowed_languages": [
        "bash", "javascript", "python", "yaml", "json", "typescript", "shell",
        "text", "markdown", "mermaid", "http", "xml", "html", "css", "sql",
        "dockerfile", "go", "rust", "java", "cpp", "c", "jsonc", "prometheus",
        "hcl", "terraform", "ruby", "php", "swift", "kotlin", "promql", "sh",
        "powershell", "ps1", "zsh", "diff", "ini", "toml", "properties",
        "nginx", "apache", "vim", "lua", "r", "scala", "perl", "groovy",
        "makefile", "cmake", "gradle", "maven"
      ]
    },
    
    // MD041: First line in file should be a top level heading (allow front matter)
    "MD041": { "front_matter_title": "" },
    
    // MD046: Code block style (allow both indented and fenced)
    "MD046": false,
    
    // MD047: Files should end with single newline
    "MD047": true,
    
    // MD050: Strong style should be consistent (use asterisks)
    "MD050": { "style": "asterisk" },
    
    // MD051: Link fragments should be valid (disable for complex anchors)
    "MD051": false,
    
    // MD052: Reference links and images should use a label that is defined
    "MD052": false,
    
    // MD058: Tables should be surrounded by blank lines
    "MD058": true
  },
  
  // Ignore patterns for files that can't be easily fixed or are auto-generated
  "ignores": [
    "node_modules/**",
    ".git/**",
    "**/.tmp/**",
    "**/CHANGELOG.md",
    
    // Auto-generated quality reports
    ".tmp/docs/markdown-quality-report.md",
    ".tmp/reports/**",
    
    // Auto-generated documentation with complex formatting
    "docs/analysis/**",
    "docs/api/**",
    
    // Auto-generated agent and documentation reports
    "docs/agent-standardization-report.md",
    "docs/documentation-update-report.md",
    
    // Symlinked directories (avoid duplicates)
    ".claude/**",
    
    // External templates and imports
    "system-configs/.claude/output-styles/**",
    
    // Large auto-generated files that are difficult to maintain
    "docs/ml-api-reference.md",
    "docs/performance-predictor-guide.md"
  ]
}